---
import Layout from "./Layout.astro";
import BreadcrumbAuto from "../components/BreadcrumbAuto.astro";
import { urlFor } from "../lib/sanity";
import MoreLikeThis from "../components/MoreLikeThis.astro";
import Card from "../components/Card.astro";
import DateLabel from "../components/Events/DateLabel.astro";
import { DateTime } from "luxon"
import { defaultImage } from "../lib/settings";

const { title, header, breadcrumbs, preview, featuredImage, moreContent } =
  Astro.props;
---

<Layout title={title} description={preview}>
  <main slot="main">
    <article>
      <BreadcrumbAuto navigation={breadcrumbs} className="breadcrumb-wrapper" />
      <div class="content-wrapper with-sidebar">
        <div class="main-panel flow">
          <section class="header flow">
            <div>
              <slot name="eyebrow">Eyebrow</slot>
              <h1 class="text-step-6">{header}</h1>
            </div>
            <p class="text-step-1"><em>{preview}</em></p>
          </section>
          {
            featuredImage && (
              <img
                class="img"
                src={urlFor(featuredImage).width(900).auto("format").url()}
                alt={featuredImage.asset.altText || ""}
                width={900}
                height={Math.floor(
                  900 / featuredImage.asset.metadata.aspectRatio
                )}
                style={`background-image: url(${featuredImage.asset.metadata.lqip})`}
                loading="lazy"
                decoding="async"
              />
            )
          }
          <section>
            <slot name="main-panel" />
          </section>
        </div>
        <div class="sidebar">
          <slot name="sidebar" />
        </div>
      </div>
      <slot name="cta" />
      {
        moreContent && (
          <MoreLikeThis
            relatedContent={{
              heading: moreContent.heading,
              link: moreContent.link,
            }}
          >
          {moreContent.type == 'event' && 
          <ul class="responsive-grid">
            {moreContent.content.map(item => {
              const image = item.image || item.associatedMinistry.image || defaultImage;
              return (
                <li>
                  <Card 
                    title={item.name} 
                    image={image}
                    href={`/connect/events/${DateTime.fromISO(item.date).setZone('America/Los_Angeles').toFormat('L-d-yyyy')}-${item.slug}`}
                >
                    <div slot="label" class="event-date">
                        <DateLabel date={item.date} />
                    </div>
                    <div slot="header" class="small-title event-category">
                        {`${item.eventType.name} event`}
                    </div>
                    <p slot="body" class="text-step--1">
                        {item.preview}
                    </p>
                    <div slot="footer" class="location-footer text-step--1 cluster font-header">
                        <span class="location-icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512" height="16" width="16" fill="var(--color-primary-800)"><defs><style>.fa-secondary{opacity:.4}</style></defs><path class="fa-primary" d="M192 144a48 48 0 1 0 0 96 48 48 0 1 0 0-96z"/><path class="fa-secondary" d="M215.7 499.2C267 435 384 279.4 384 192C384 86 298 0 192 0S0 86 0 192c0 87.4 117 243 168.3 307.2c12.3 15.3 35.1 15.3 47.4 0zM192 112a80 80 0 1 1 0 160 80 80 0 1 1 0-160z"/></svg></span>
                        <span>{item.location}</span>
                    </div>
                </Card>
                  </li>
              )
            }
              )}  
          </ul>
        }
          </MoreLikeThis>
        )
        // <section class="highlight-section">
        //   <div class="content-wrapper">
        //     <slot name="highlight" />
        //   </div>
        // </section>
      }
    </article>
  </main>
</Layout>

<style>
  .content-wrapper.with-sidebar {
    --sidebar-gap: 5rem;
    padding-block: var(--space-3xl);
  }

  .main-panel.flow {
    --flow-space: 3rem;
  }

  .header.flow {
    --flow-space: 2rem;
  }

  .highlight-section {
    padding-block: var(--space-3xl);
    background-color: var(--color-primary-50);
  }

  .breadcrumb-wrapper {
    position: relative;
    z-index: 10;
    padding-inline-start: var(--space-l);
    top: 1rem;
    width: fit-content;
  }

  /* .content-wrapper.content {
    background-color: var(--color-white);
    padding-block: var(--space-m-2xl);
    box-shadow: var(--shadow-large);
    border-radius: var(--rounded-corners);
  } */

  /* .frame {
    --width: 7;
    --height: 5;
    border-radius: var(--rounded-corners);
  } */

  .img {
    border-radius: var(--rounded-corners);
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }

  .responsive-grid {
    --gap: 2rem;
    --item-min-width: 20rem;
    --item-max-width: 24rem;
  }

  .location-footer.cluster {
    gap: 4px;
  }

  .location-footer .location-icon {
    display: flex;
  }

    .small-title.event-category {
      display: inline-block;
      color: var(--color-primary-900);
      line-height: 1;
      padding: 4px 6px;
      margin-bottom: 10px;
      background-color: var(--color-primary-100);
      border-radius: var(--rounded-corners-small);
    }
</style>
