---
import Layout from "./Layout.astro";
import InnerHero from "../components/InnerHero.astro";
import { PortableText } from "astro-portabletext";
import InlineImage from "../components/InlineImage.astro";
import PreviewFeature from "../components/PreviewFeature.astro";
import FullWidthFeature from "../components/FullWidthFeature.astro";
import FeatureList from "../components/FeatureList.astro";
import "../styles/rich-text.css";

import { urlFor } from "../lib/sanity";
import { filterLocalNav, allNavigation } from "../lib/navigation";
import { getCurrentPage } from "../lib/pages";
import IntroSection from "../components/IntroSection.astro";

import DefaultTemplate from "../pageTemplates/DefaultTemplate.astro";
import AboutTemplate from "../pageTemplates/AboutTemplate.astro";
import ContactTemplate from "../pageTemplates/ContactTemplate.astro";
import GiveTemplate from "../pageTemplates/GiveTemplate.astro";
import MissionsTemplate from "../pageTemplates/MissionsTemplate.astro";
import FeaturesTemplate from "../pageTemplates/FeaturesTemplate.astro";
import FAQTemplate from "../pageTemplates/FAQTemplate.astro";
import MinistryTypesTemplate from "../pageTemplates/MinistryTypesTemplate.astro";
import UtilityTemplate from "../pageTemplates/UtilityTemplate.astro";

// const utilityLocalNav = {
//   name: "More",
//   pages: [
//     {
//       name: "Give",
//       slug: "/giving",
//     },
//     {
//       name: "Calendar",
//       slug: "/calendar",
//     },
//     {
//       name: "Contact",
//       slug: "/contact",
//     },
//     {
//       name: "Nursery School",
//       slug: "https://www.smccnurseryschool.org/",
//     },
//   ],
// };

const givingLocalNav = {
  name: "Giving",
  pages: [
    {
      name: "Ways to Give",
      pageSlug: {
        current: "giving",
      },
    },
    {
      name: "The Foundation of SMCC",
      sectionSlug: "giving",
      pageSlug: {
        fullUrl: "giving/the-foundation-of-smcc",
        current: "the-foundation-of-smcc",
      },
    },
    {
      name: "Stewardship",
      sectionSlug: "giving",
      pageSlug: {
        fullUrl: "giving/stewardship",
        current: "stewardship",
      },
    },
  ],
};

const { currentPage, contentPadding } = Astro.props;
const page = getCurrentPage(currentPage);
const { seo, template, sectionSlug, pageName, pageContent } = page;

////// Page name, header text/bg image, and cta are all handled on this layout.
////// pageContent is passed down to child template components

const bgImage = pageContent.headerBgImage
  ? urlFor(pageContent.headerBgImage)
      .width(1600)
      .height(450)
      .auto("format")
      .url()
  : undefined;
// const bgImage = background.image
//   ? urlFor(background.image).width(1600).height(450).auto("format").url()
//   : undefined;
---

<Layout meta={seo}>
  <Fragment slot="pageHead">
    <link rel="preload" href={bgImage} as="image" />
    <slot name="pageHead" />
  </Fragment>
  <main slot="main">
    <InnerHero
      localNav={sectionSlug == "giving"
        ? givingLocalNav
        : filterLocalNav(currentPage)}
      pageTitle={pageName}
      pageDescription={pageContent.headerText}
      bgImage={bgImage}
    />
    <article class:list={["content-wrapper flow", contentPadding && "padding"]}>
      {template == "default" && <DefaultTemplate content={pageContent} />}
      {template == "about" && <AboutTemplate content={pageContent} />}
      {template == "contact" && <ContactTemplate content={pageContent} />}
      {template == "give" && <GiveTemplate content={pageContent} />}
      {template == "contentCTA" && <DefaultTemplate content={pageContent} />}
      {template == "missions" && <MissionsTemplate content={pageContent} />}
      {
        template == "ministryTypes" && (
          <MinistryTypesTemplate content={pageContent} />
        )
      }
      {template == "features" && <FeaturesTemplate content={pageContent} />}
      {template == "faq" && <FAQTemplate content={pageContent} />}
      {template == "utility" && <UtilityTemplate content={pageContent} />}
      <!-- <slot name="pre-content" />
      {
        introSections &&
          introSections.map((section) => {
            return (
              <IntroSection
                title={section.heading}
                image={section.image}
                layout={section.layout && "flipped"}
              >
                <PortableText value={section.text} />
              </IntroSection>
            );
          })
      } -->
      <slot />
      <!-- {
        template == "features" && (
          <FeatureList features={pageContent.features} />
        )
      } -->
      <!-- {
        content && (
          <div class="content rich-text">
            <PortableText
              value={content}
              components={{
                type: { image: InlineImage, previewFeature: PreviewFeature },
              }}
            />
          </div>
        )
      } -->
    </article>
    <slot name="pre-footer" />
    {
      pageContent.cta && (
        <aside>
          <FullWidthFeature content={pageContent.cta} />
        </aside>
      )
    }
  </main>
</Layout>

<style>
  article.content-wrapper {
    margin-block-start: var(--section-spacer-half);
    margin-block-end: var(--section-spacer);
  }

  .padding {
    padding-block-start: var(--space-2xl);
  }

  .content-wrapper.flow {
    --flow-space: var(--space-3xl);
  }

  @media (max-width: 768px) {
    article.content-wrapper {
      margin-block-start: 3rem;
      margin-block-end: 3rem;
    }

    .padding {
      padding-block-start: 1rem;
    }
  }
</style>
