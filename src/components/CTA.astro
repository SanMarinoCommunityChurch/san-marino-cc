---
import { getSanityData, urlFor } from "../lib/sanity";
import Button from "./Button.astro";

const bgImage = await getSanityData(
  `*[_id == "image-e83f53d39f32b13b60cd4f527b18dfa6d3c480d0-1660x2048-jpg"][0]`
);

const { content } = Astro.props;
const { heading, text, linkName, href } = content;
---

<article>
  <section class="cta-top">
    <div class="content-wrapper center-items flow">
      <h2 class="text-step-4 color-white">{heading}</h2>
      <p>{text}</p>
      <Button
        href={href.sectionSlug
          ? `/${href.pageSlug.fullUrl}`
          : `/${href.pageSlug.current}`}
        theme="primary-light"
      >
        {linkName}
      </Button>
    </div>
    <img
      src={urlFor(bgImage)
        .width(1200)
        .height(675)
        .fit("crop")
        .crop("top")
        .auto("format")
        .url()}
      alt={bgImage.altText}
      width={1200}
      height={675}
    />
  </section>
  <section class="cta-bottom">
    <div class="content-wrapper center-items flow">
      <div class="flow">
        <h3 class="text-step-2">Sign up for email updates</h3>
        <p class="paragraphs">
          Let us know if you would like to receive our weekly email updates.
        </p>
      </div>
      <form
        class="form cluster"
        name="home-page-email-signup"
        method="POST"
        data-netlify="true"
        action="/contact/success"
      >
        <label for="signup_name">
          <span class="sr-only">Name</span>
          <input
            id="signup_name"
            name="name"
            type="text"
            placeholder="Your Name"
          />
        </label>
        <label for="signup_email">
          <span class="sr-only">Email</span>
          <input
            id="signup_email"
            name="email"
            type="email"
            placeholder="Your Email"
            required
          />
        </label>
        <input type="submit" value="Submit" />
      </form>
    </div>
  </section>
</article>

<style>
  .center-items {
    flex-direction: column;
  }

  .cta-top {
    position: relative;
    color: var(--color-primary-200);
    padding-block-start: 5rem;
    padding-block-end: 7rem;
    background-color: var(--color-primary-900);
    overflow: hidden;
  }

  .cta-top .content-wrapper {
    position: relative;
    max-width: var(--paragraph-measure);
    z-index: 2;
  }

  .cta-top img {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    height: auto;
    object-fit: cover;
    filter: saturate(0);
    mix-blend-mode: multiply;
    opacity: 0.95;
    z-index: 1;
  }

  .cta-bottom .content-wrapper {
    position: relative;
    top: -3rem;
    background-color: var(--color-white);
    padding: 3rem;
    border-radius: var(--rounded-corners);
    box-shadow: var(--shadow-base);
    z-index: 3;
  }

  .cta-bottom > .flow {
    --flow-space: var(--space-l);
  }

  .paragraphs {
    max-width: var(--paragraph-measure);
  }

  input {
    padding: 0.5rem 1rem;
    font-family: var(--font-secondary);
    font-weight: 400;
    color: var(--color-body-text);
    border: 1px solid var(--color-primary-200);
    border-radius: var(--rounded-corners);
  }

  input:focus-visible {
    outline: var(--color-primary-800) auto 1px;
  }

  input::placeholder {
    color: var(--color-neutral-200);
  }

  input[type="submit"] {
    background-color: var(--color-primary-800);
    color: var(--color-white);
    border: 0;
    font-size: var(--step--1);
    line-height: 1.15;
    padding: 0.75em 1em 0.78rem;
    font-family: var(--font-secondary);
    font-weight: var(--font-weight-semi);
    text-transform: uppercase;
    letter-spacing: 1.5pt;
    border-radius: 4px;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    gap: 0.45rem;
    transition: all 0.2s ease-in-out;
  }

  input[type="submit"]:hover {
    background-color: var(--color-primary-900);
  }

  @media (max-width: 768px) {
    .cta-bottom .content-wrapper {
      padding-inline: 1rem;
    }

    .form.cluster {
      width: 100%;
      flex-direction: column;
      --align: stretch;
    }

    input {
      width: 100%;
    }

    .cta-top img {
      object-fit: cover;
      transform: translateY(0);
      inset: 0;
      height: 100%;
    }
  }
</style>
