---
import Button from "./Button.astro";
import {Image} from "@astrojs/image/components"
import {urlFor} from "../lib/sanity"
import PopoverHeader from "./Svelte/PopoverHeader.svelte";

const { mainNavigation, fullNavigation, utilityNavigation } = Astro.props;
---

<header class="header">
  <PopoverHeader client:load>
    <a slot="logo" href="/" class="font-header logo"
      >San Marino Community Church</a
    >
    <nav slot="mainNav" class="main-nav">
      <ul class="cluster">
        {
          mainNavigation.map((navItem) => (
            <li>
              <Button
                href={`/${navItem.href}`}
                style={!navItem.button ? "nav" : "solid"}
                theme={!navItem.button ? "neutral" : "primary-2"}
              >
                {navItem.name}
                {navItem.name == 'Worship Live' &&
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" width="18" height="18" fill="var(--color-primary-50)" style="margin: 0;"><defs><style>.fa-secondary{opacity:.4}</style></defs><path class="fa-primary" d="M576 128c0-11.8-6.5-22.6-16.9-28.2s-23-5-32.9 1.6L384 196.2V315.8l142.2 94.8c9.8 6.5 22.4 7.2 32.9 1.6s16.9-16.4 16.9-28.2V128z"/><path class="fa-secondary" d="M0 128C0 92.7 28.7 64 64 64H320c35.3 0 64 28.7 64 64V384c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V128z"/></svg>
            }
              </Button>
            </li>
          ))
        }
      </ul>
    </nav>
    <Fragment slot="headerCTAButton">
      <Button href="/" theme="secondary">Give</Button>
    </Fragment>
    <div slot="panel">
      <div class="nav-grid content-wrapper">
        <div class="nav-subgrid">
          {
            fullNavigation.map(
              (navItem) =>
                navItem.name !== "Utility" && (
                  <div class="flow">
                    {navItem.img && (
                      <a
                        href={`/${navItem.slug}/${navItem.children[0].slug}`}
                        class="img-link"
                      >
                        <div class="overlay" />
                        <img
                          src={urlFor(navItem.img).width(400).url()}
                          alt=""
                          width={400}
                          class="nav-img"
                          loading="eager"
                        />
                      </a>
                    )}
                    <div class="small-title">{navItem.name}</div>
                    <ul class="flow">
                      {navItem.children.map((navChild) => (
                        <li>
                          <a href={`/${navItem.slug}/${navChild.slug}`}>
                            {navChild.name}
                          </a>
                        </li>
                      ))}
                    </ul>
                  </div>
                )
            )
          }
        </div>
      </div>
      <div class="utilities-wrapper">
        <div class="nav-utilities content-wrapper">
          {
            utilityNavigation.map(
              (navItem) =>
                  <ul class="">
                    {navItem.children.map((navChild) => (
                      <li class="utility-item">
                        <a href={`/${navChild.slug}`}>
                          <div class="small-title">{navChild.name}</div>
                          <p>{navChild.description}</p>
                        </a>
                      </li>
                    ))}
                  </ul>
            )
          }
        </div>
      </div>
    </div>
  </PopoverHeader>
</header>

<style>
  .logo {
    color: var(--color-primary-800);
  }

  .header {
    position: sticky;
    top: 0;
    left: 0;
    right: 0;
    z-index: 50;
  }

  .header.cluster {
    --justify: space-between;
  }

  .main-nav .cluster {
    --justify: center;
  }

  .main-nav .cluster :last-child {
    margin-inline-end: 1rem;
  }

  .full-nav {
    background-color: var(--color-white);
    height: auto;
    overflow: hidden;
  }

  .full-nav-wrapper {
    display: block;
    opacity: 1;
  }

  .menu-toggle {
    padding: 0;
    border: 0;
    margin: 0;
    appearance: none;
    background-color: transparent;
  }

  /* .nav-grid {
    display: grid;
    grid-template-columns: repeat(3fr, 1fr);
    gap: 1rem;
  } */

  /* .nav-grid > :first-child {
    grid-column: 2/10;
    padding-right: 2rem;
  }

  .nav-grid > :last-child {
    grid-column: span 3;
    background-color: var(--color-primary-900);
  } */

  .nav-grid .small-title, .utilities-wrapper .small-title {
    color: var(--color-primary-800);
  }

  /* .nav-grid > :last-child .small-title {
    color: var(--color-primary-100);
  } */

  .nav-grid .flow {
    --flow-space: 1rem;
  }

  .nav-grid ul.flow {
    --flow-space: 0.5rem;
  }

  .nav-grid ul {
    font-size: var(--step--1);
    margin-left: -6px;
  }

  .nav-grid ul a {
    text-decoration: none;
    padding: 5px 6px 2px 6px;
    background: transparent;
    border-radius: 4px;
  }

  .nav-grid ul a:hover {
    background: var(--color-primary-100);
    color: var(--color-primary-800);
  }

  .nav-img {
    aspect-ratio: 3/2;
    object-fit: cover;
    border-radius: var(--rounded-corners);
  }

  .img-link {
    position: relative;
  }

  .img-link .overlay {
    position: absolute;
    inset: 0;
    z-index: 1;
    background-color: var(--color-primary-700);
    border-radius: var(--rounded-corners);
    mix-blend-mode: multiply;
    opacity: 0;
    transition: all 0.2s ease;
  }

  .img-link:hover .overlay {
    opacity: 0.7;
  }

  .img-link:hover .nav-img {
    filter: saturate(0);
  }

  .nav-subgrid {
    padding-block-start: 7rem;
    padding-block-end: 2rem;
  }

  .nav-subgrid {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: 2rem;
    padding-inline-start: 2rem;
  }

  .utilities-wrapper {
    padding-block: 1rem;
    background: var(--color-primary-100);
    /* color: var(--color-primary-100); */
  }

  /* .nav-utilities {
    padding-inline: 3rem;
  } */

  .nav-utilities ul.flow {
    --flow-space: 0.5rem;
  }

  .nav-utilities ul {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1rem;
    align-items: start;
  }
  
  .nav-utilities ul a {
    border-radius: var(--rounded-corners);
    transition: background-color 0.2s ease;
    padding: 9px;
  }

  .nav-utilities ul a:hover {
    background: var(--color-primary-200);
  }

  .utility-item a {
    display: inline-block;
    text-decoration: none;
  }

  .utility-item p {
    font-size: var(--step--2);
    margin-top: 6px;
  }

  /* @media (max-width: 1280px) {

  } */

  @media (max-width: 768px) {
    .main-nav {
      display: none;
    }
  }

</style>
