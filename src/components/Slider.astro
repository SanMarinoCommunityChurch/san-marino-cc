---
import { urlFor } from "../lib/sanity";
import PostCategory from "../components/PostCategory.astro";
import { allPostTypes } from "../lib/posts";
const { heading, description, slides } = Astro.props;
---

<section class="splide resources-slider" aria-labelledby="slider-heading">
  <header class="content-wrapper center-items flow">
    <div>
      <h2 id="slider-heading" class="text-step-4">{heading}</h2>
      <p class="paragraph flow">{description}</p>
    </div>
    <ul class="cluster types">
      <li>
        <PostCategory
          href="/resources"
          size="large"
          position="relative"
          name="All"
        />
      </li>
      {
        allPostTypes.map((type, index) => {
          return (
            <li>
              <PostCategory
                href={`/resources/${type.slug}`}
                size="large"
                position="relative"
                name={type.name}
                theme={type.slug}
              />
            </li>
          );
        })
      }
    </ul>
  </header>
  <div class="margin-top relative">
    <div class="splide__arrows"></div>
    <div class="splide__track">
      <ul class="splide__list">
        {
          slides.map((slide) => (
            <li class="splide__slide">
              <a href={`/resources/${slide.slug}`} class="">
                <PostCategory
                  slot="label"
                  name={slide.category.name}
                  theme={slide.category.slug}
                />
                <div class="slide-text flow">
                  <h3 class="text-step-3 color-white">{slide.title}</h3>
                  <p>{slide.preview}</p>
                </div>
                <div class="overlay" />
                <div class="frame video">
                  <img
                    class="img"
                    src={urlFor(slide.image).width(900).auto("format").url()}
                    alt={slide.image.asset.altText}
                    style={`background-image: url(${slide.image.asset.metadata.lqip})`}
                  />
                </div>
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</section>

<style>
  .margin-top {
    margin-top: 3rem;
  }

  .relative {
    position: relative;
  }

  #slider-heading {
    margin-bottom: 1rem;
  }

  .center-items.flow {
    --flow-space: 2.5rem;
  }

  .paragraph.flow {
    max-width: var(--paragraph-measure);
  }

  .splide__slide a {
    display: flex;
    align-items: flex-end;
    position: relative;
    text-decoration: none;
  }

  .slide-text {
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    padding: 3rem;
    color: var(--color-primary-100);
    z-index: 2;
  }

  .slide-text.flow {
    --flow-space: 6px;
  }

  .overlay {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to top, var(--color-primary-900), transparent);
    border-radius: var(--rounded-corners);
    z-index: 1;
  }

  .frame {
    border-radius: var(--rounded-corners);
  }

  .splide__slide a:hover h3 {
    text-decoration: underline;
  }

  .img {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }

  .splide__slide a img {
    transition: all 0.3s ease;
  }

  .splide__slide a:hover img {
    transform: scale(1.1);
  }
</style>

<script>
  import Splide from "@splidejs/splide";
  import "@splidejs/splide/css";

  const splide = new Splide(".resources-slider", {
    type: "loop",
    padding: "25%",
    gap: "2em",
    breakpoints: {
      1024: {
        padding: "20%",
      },
      768: {
        padding: "15%",
        gap: "1em",
      },
    },
  });
  splide.mount();
</script>
