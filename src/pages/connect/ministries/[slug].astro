---
import Layout from "../../../layouts/Layout.astro";
import ThirdLayout from "../../../layouts/ThirdLayout.astro";
import MoreLikeThis from "../../../components/MoreLikeThis.astro";
import ImageCard from "../../../components/ImageCard.astro";
import ContactAvatar from "../../../components/ContactAvatar.astro";
import Button from "../../../components/Button.astro";
import InnerHero from "../../../components/InnerHero.astro";
import Breadcrumb from "../../../components/Breadcrumb.astro";
import ServiceInfo from "../../../components/ServiceInfo.astro";
import { DateTime } from "luxon";
import {
  ministriesPreview,
  ministriesDetail,
} from "../../../lib/sanityQueries";
import { randomizeAndSlice } from "../../../utils/data";

import { PortableText } from "astro-portabletext";
import { joinNames } from "../../../utils/format";
import { getSanityData, urlFor } from "../../../lib/sanity";
import MiniPreviewCard from "../../../components/MiniPreviewCard.astro";
import placeholderImg from "../../../assets/images/church-ext-4.jpg";

export async function getStaticPaths() {
  const pages = await getSanityData(ministriesDetail);

  return pages.map((page) => {
    return {
      params: { slug: page.slug },
      props: { page },
    };
  });
}

const { slug } = Astro.params;
const { page } = Astro.props;

const breadcrumbs = [
  {
    name: "Connect",
    href: "/connect",
  },
  {
    name: "Ministries",
    href: "/connect/ministries",
  },
  {
    name: page.name,
    current: true,
  },
];

const otherMinistries = await getSanityData(ministriesPreview);

const randomizedMinistries = randomizeAndSlice(
  otherMinistries,
  "ministryType",
  page,
  3
);
---

<ThirdLayout
  title={page.name}
  header={page.name}
  preview={page.preview}
  breadcrumbs={breadcrumbs}
  featuredImage={urlFor(page.image).url()}
>
  <div slot="eyebrow" class="eyebrow cluster">
    <a
      class="small-title heading-category"
      href={`/connect/ministries#${page.typeSlug}`}>{page.category}</a
    >
  </div>
  <div slot="main-panel">
    <PortableText value={page.description} />
  </div>
  <div slot="sidebar" class="sidebar-content">
    {
      page.person && (
        <div>
          <ContactAvatar
            image={page.person.image}
            name={joinNames(page.person.name)}
            href={page.person.contact.email && page.person.contact.email}
          />
        </div>
      )
    }
    {
      // Check if there are any associated events before rendering
      page.associatedEvents[0] && (
        <section class="associated-events flow">
          <h2 class="text-step-2">Associated Events</h2>
          <ul>
            {page.associatedEvents.map((event) => (
              <li class="cluster">
                <MiniPreviewCard
                  href={`/connect/events/${DateTime.fromISO(
                    event.date
                  ).toFormat("L-d-yyyy")}-${event.slug}`}
                  image={
                    event.image
                      ? urlFor(event.image).width(300).url()
                      : placeholderImg
                  }
                  imageAlt=""
                >
                  <div class="text-step-1 font-header">{event.name}</div>
                  <time class="small-title" datetime={event.date}>
                    {DateTime.fromISO(event.date).toLocaleString(
                      DateTime.DATE_FULL
                    )}
                  </time>
                </MiniPreviewCard>
              </li>
            ))}
          </ul>
        </section>
      )
    }
  </div>
  <!-- <section slot="cta" class="content-wrapper cta">
    <Feature />
  </section> -->
  <div slot="highlight" class="more flow">
    <h2 class="text-step-3">Explore Related Ministries</h2>
    <ul class="responsive-grid">
      {
        randomizedMinistries.map((item) => (
          <li>
            <ImageCard
              title={item.name}
              description={item.preview}
              imgSrc={urlFor(item.image).url()}
              imgAlt=""
              href={`/connect/ministries/${item.slug}`}
            />
          </li>
        ))
      }
    </ul>
    <div class="center-items">
      <Button href="/connect/ministries">See All Ministries</Button>
    </div>
    <!-- <MoreLikeThis relatedItems={randomizedMinistries} /> -->
  </div>
</ThirdLayout>

<style>
  .cta {
    margin-block: var(--section-spacer-half);
  }

  .more {
    --flow-space: 2.5rem;
  }

  .eyebrow.cluster {
    margin-bottom: 0.75rem;
  }

  .eyebrow > :last-child {
    font-variant-numeric: lining-nums;
    color: var(--color-primary-800);
  }

  .small-title.heading-category {
    font-size: 14px;
    display: inline-block;
    text-decoration: none;
    color: var(--color-primary-800);
    width: fit-content;
    line-height: 1;
    padding: 6px 9px;
    background-color: var(--color-primary-100);
    border-radius: var(--rounded-corners-small);
    transition: all 0.2s ease;
  }

  .small-title.heading-category:hover {
    background-color: var(--color-primary-200);
  }

  .responsive-grid {
    --gap: 2rem;
    --item-min-width: 20rem;
  }

  .sidebar-content {
    padding-top: 1rem;
  }

  .associated-events {
    margin-top: 3rem;
  }

  .associated-events > :first-child {
    margin-bottom: 0.5rem;
  }

  .associated-events .text-step-1 {
    color: var(--color-primary-800);
    margin-bottom: -4px;
  }

  .associated-events li:hover .text-step-1 {
    text-decoration: underline;
  }

  .associated-events time {
    font-variant-numeric: lining-nums;
  }
</style>
