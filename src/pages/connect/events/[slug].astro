---
import Layout from "../../../layouts/Layout.astro";
import ThirdLayout from "../../../layouts/ThirdLayout.astro";
import Card from "../../../components/Card.astro"
import DateLabel from "../../../components/Events/DateLabel.astro"
import MoreLikeThis from "../../../components/MoreLikeThis.astro";
import Feature from "../../../components/Feature.astro";
import Button from "../../../components/Button.astro";
import InnerHero from "../../../components/InnerHero.astro";
import Breadcrumb from "../../../components/Breadcrumb.astro";
import ServiceInfo from "../../../components/ServiceInfo.astro";
import { eventsPreview, eventsDetail } from "../../../lib/sanityQueries";
import { randomizeAndSlice } from "../../../utils/data"

import { PortableText } from "astro-portabletext";
import {
  formatDateSlug,
  formatDate,
  timeFormatter,
  formatTimeFromDate,
  capitalizeFirstLetter,
  joinNames,
} from "../../../utils/format";
import { getSanityData, urlFor } from "../../../lib/sanity";

import bgImage from "../../../assets/images/church-ext-2.jpg";

export async function getStaticPaths() {
  const pages = await getSanityData(eventsDetail);

  return pages.map((page) => {
    return {
      params: { slug: `${formatDateSlug(page.date)}-${page.slug}` },
      props: { page },
    };
  });
}

const { slug } = Astro.params;
const { page } = Astro.props;

const otherEvents = await getSanityData(eventsPreview);
const randomizedEvents = randomizeAndSlice(otherEvents, 'type', page, 3);
---

<ThirdLayout
  title={page.name}
  header={page.name}
  preview={page.preview}
  breadcrumbs="breadcrumbs"
  featuredImage={page.image && urlFor(page.image).url()}
>
  <div slot="main-panel">
    <PortableText value={page.description} />
  </div>
  <div slot="sidebar">
    <div class="sidebar-content">
        <div class="event-box">
            <div class="">
                <h3 class="text-step-2">Event Details</h3>
                <ul class="event-details flow">
                    <li>
                        <div class="small-title cluster">
                            <span>x</span>
                            <span>Date</span>
                        </div>
                        <time class="text-step--1">{formatDate(page.date)}</time>
                    </li>
                    <li>
                        <div class="small-title cluster">
                            <span>x</span>
                            <span>Time</span>
                        </div>
                        <time class="text-step--1">{formatTimeFromDate(page.date)}</time>
                        {page.hasEndDate &&
                            <span>â€“ <time>{formatTimeFromDate(page.endDate)}</time></span>
                        }
                    </li>
                    <li>
                        <div class="small-title cluster">
                            <span>x</span>
                            <span>Location</span>
                        </div>
                        <div class="text-step--1">{page.location}</div>
                    </li>
                </ul>
            </div>
            <img src={bgImage} alt="" class="img" />
        </div>
        <div class="event-box-lower">
            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Enim, alias?
        </div>
    </div>
  </div>
  <!-- <section slot="cta" class="content-wrapper cta">
    <Feature />
  </section> -->
  <div slot="highlight" class="more flow">
    <h2 class="text-step-3">More Events</h2>
    <ul class="responsive-grid">
        {randomizedEvents.map(item =>
            <li>
                <Card 
                    title={item.name} 
                    img={
                        item.image ?
                        urlFor(item.image).url()
                        :
                        urlFor(item.associatedMinistry.image).url()
                    }
                    href={`/connect/events/${formatDateSlug(item.date)}-${item.slug}`}
                >
                    <div slot="label" class="event-date">
                        <DateLabel date={item.date} />
                    </div>
                    <div slot="header" class="small-title event-category">
                        {item.eventType}
                    </div>
                    <p slot="body" class="text-step--1">
                        {item.preview}
                    </p>
                    <div slot="footer" class="location-footer text-step--1 cluster font-header">
                        <span class="location-icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512" height="16" width="16" fill="var(--color-primary-800)"><defs><style>.fa-secondary{opacity:.4}</style></defs><path class="fa-primary" d="M192 144a48 48 0 1 0 0 96 48 48 0 1 0 0-96z"/><path class="fa-secondary" d="M215.7 499.2C267 435 384 279.4 384 192C384 86 298 0 192 0S0 86 0 192c0 87.4 117 243 168.3 307.2c12.3 15.3 35.1 15.3 47.4 0zM192 112a80 80 0 1 1 0 160 80 80 0 1 1 0-160z"/></svg></span>
                        <span>{item.location}</span>
                    </div>
                </Card>
            </li>
        )}
    </ul>
    <!-- <MoreLikeThis relatedItems={randomizedEvents} /> -->
  </div>
</ThirdLayout>

<style>
  .cta {
    margin-block: var(--section-spacer-half);
  }

  .more {
    --flow-space: 2.5rem;
  }

    .responsive-grid {
    --gap: 2rem;
    --item-min-width: 20rem;
  }

.location-footer.cluster {
    gap: 4px;
  }

  .location-footer .location-icon {
    display: flex;
  }

  .sidebar-content {
    padding-top: 1rem;
  }

  .small-title.event-category {
    display: inline-block;
    color: var(--color-primary-900);
    line-height: 1;
    padding: 4px 6px;
    margin-bottom: 8px;
    background-color: var(--color-primary-100);
    border-radius: var(--rounded-corners-small);
  }

  .event-box {
    position: relative;
    display: flex;
    flex-direction: column;
    padding: 2rem;
    border-top-left-radius: var(--rounded-corners);
    border-top-right-radius: var(--rounded-corners);
    background: var(--color-primary-100);
    overflow: hidden;
  }

  .event-box-lower {
    background: var(--color-primary-800);
    color: var(--color-white);
    padding: 2rem;
    border-bottom-left-radius: var(--rounded-corners);
    border-bottom-right-radius: var(--rounded-corners);
  }

  .event-box > div {
    position: relative;
    z-index: 2;
  }

  .img {
    position: absolute;
    z-index: 1;
    inset: 0;
    border-radius: var(--rounded-corners);
    filter: saturate(0);
    opacity: 0.75;
    mix-blend-mode: overlay;
  }
  
  .event-details {
    margin-top: 1.5rem;
  }

  .event-details .small-title {
    color: var(--color-primary-800);
    margin-bottom: 3px;
  }

  .event-details .small-title.cluster {
    --cluster-space: 6px;
  }
</style>
