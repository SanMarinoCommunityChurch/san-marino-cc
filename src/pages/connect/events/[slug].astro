---
import ThirdLayout from "../../../layouts/ThirdLayout.astro";
import Card from "../../../components/Card.astro";
import DateLabel from "../../../components/Events/DateLabel.astro";
import ContactAvatar from "../../../components/ContactAvatar.astro";
import MoreLikeThis from "../../../components/MoreLikeThis.astro";
import MiniPreviewCard from "../../../components/MiniPreviewCard.astro";
// import ImageOpt from "../../../components/ImageOpt.astro";
import { Image } from "astro:assets";
import Button from "../../../components/Button.astro";
import { randomizeAndSlice, filterAgainst } from "../../../utils/data";
import { defaultImage } from "../../../lib/settings";
import InlineImage from "../../../components/InlineImage.astro";
import InlineYoutubeEmbed from "../../../components/InlineYoutubeEmbed.astro";
import "../../../styles/rich-text.css";

import { PortableText } from "astro-portabletext";
import { DateTime } from "luxon";
import { allEvents, previewEvents } from "../../../lib/events";

import bgImage from "../../../assets/images/church-ext-2.jpg";
// const bgImage = "./public/church-ext-2.jpg";

export async function getStaticPaths() {
  const pages = allEvents;

  return pages.map((page) => {
    return {
      params: {
        slug: page.slug,
      },
      props: { page },
    };
  });
}

const { slug } = Astro.params;
const { page } = Astro.props;
const origin = Astro.url.origin;
const breadcrumbs = [
  {
    name: "Connect",
    href: "/connect",
  },
  {
    name: "Events",
    href: "/connect/events",
  },
  {
    name: page.name,
    current: true,
  },
];

const otherEvents = previewEvents;
const filteredEvents = filterAgainst(otherEvents, "type", page);
const randomEvents = randomizeAndSlice(filteredEvents, 3);

const readableDate = DateTime.fromISO(page.date)
  .setZone("America/Los_Angeles")
  .toLocaleString(DateTime.DATE_FULL);
---

<ThirdLayout
  meta={{
    title: `${page.name} • ${readableDate}`,
    description: page.preview,
    ogTitle: `${page.name} • ${readableDate}`,
    ogDescription: `Event on ${readableDate}. ${page.preview}`,
    ogImage: page.image || undefined,
  }}
  header={page.name}
  preview={page.preview}
  breadcrumbs={breadcrumbs}
  featuredImage={page.image}
  moreContent={randomEvents.length != 0
    ? {
        type: "event",
        heading: "Events",
        content: randomEvents,
        link: "/connect/events",
      }
    : undefined}
>
  <div slot="eyebrow" class="eyebrow cluster">
    <a
      class="small-title heading-category"
      href={`/connect/events/${page.eventType.slug}`}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        height="12"
        width="12"
        fill="var(--color-primary-800)"
        viewBox="0 0 448 512"
        ><path
          d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"
        ></path></svg
      >
      <span>{`${page.eventType.name} Events`}</span>
    </a>
    <time class="small-title" datetime={page.date}
      >{
        DateTime.fromISO(page.date)
          .setZone("America/Los_Angeles")
          .toLocaleString(DateTime.DATE_FULL)
      }</time
    >
  </div>
  <div slot="main-panel" class="rich-text">
    <PortableText
      value={page.richContent}
      components={{
        type: {
          image: InlineImage,
          youtube: InlineYoutubeEmbed,
        },
      }}
    />
  </div>
  <div slot="sidebar">
    <div class="sidebar-content">
      <div class="event-box-wrapper">
        <div class="event-box">
          <div>
            <h2 class="text-step-2">Event Details</h2>
            <ul class="event-details flow">
              <li>
                <div class="small-title cluster">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 448 512"
                    width="14"
                    height="14"
                    ><defs
                      ><style>
                        .fa-secondary {
                          opacity: 0.4;
                        }
                      </style></defs
                    ><path
                      class="fa-primary"
                      d="M160 32c0-17.7-14.3-32-32-32S96 14.3 96 32V64H48C21.5 64 0 85.5 0 112v80H448V112c0-26.5-21.5-48-48-48H352V32c0-17.7-14.3-32-32-32s-32 14.3-32 32V64H160V32z"
                    ></path><path
                      class="fa-secondary"
                      d="M0 192H448V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V192z"
                    ></path></svg
                  >
                  <span>Date</span>
                </div>
                <time class="text-step--1"
                  >{
                    DateTime.fromISO(page.date)
                      .setZone("America/Los_Angeles")
                      .toLocaleString(DateTime.DATE_HUGE)
                  }</time
                >
              </li>
              <li>
                <div class="small-title cluster">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 512 512"
                    width="14"
                    height="14"
                    ><defs
                      ><style>
                        .fa-secondary {
                          opacity: 0.4;
                        }
                      </style></defs
                    ><path
                      class="fa-primary"
                      d="M256 96c-13.3 0-24 10.7-24 24V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24z"
                    ></path><path
                      class="fa-secondary"
                      d="M256 0a256 256 0 1 1 0 512A256 256 0 1 1 256 0zM232 120V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24s-24 10.7-24 24z"
                    ></path></svg
                  >
                  <span>Time</span>
                </div>
                <time class="text-step--1"
                  >{
                    DateTime.fromISO(page.date)
                      .setZone("America/Los_Angeles")
                      .toLocaleString(DateTime.TIME_SIMPLE)
                  }</time
                >
                {
                  page.hasEndDate && (
                    <span class="text-step--1">
                      –{" "}
                      <time class="text-step--1">
                        {DateTime.fromISO(page.endDate)
                          .setZone("America/Los_Angeles")
                          .toLocaleString(DateTime.TIME_SIMPLE)}
                      </time>
                    </span>
                  )
                }
              </li>
              <li>
                <div class="small-title cluster">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 384 512"
                    width="14"
                    height="14"
                    ><defs
                      ><style>
                        .fa-secondary {
                          opacity: 0.4;
                        }
                      </style></defs
                    ><path
                      class="fa-primary"
                      d="M192 144a48 48 0 1 0 0 96 48 48 0 1 0 0-96z"
                    ></path><path
                      class="fa-secondary"
                      d="M215.7 499.2C267 435 384 279.4 384 192C384 86 298 0 192 0S0 86 0 192c0 87.4 117 243 168.3 307.2c12.3 15.3 35.1 15.3 47.4 0zM192 112a80 80 0 1 1 0 160 80 80 0 1 1 0-160z"
                    ></path></svg
                  >
                  <span>Location</span>
                </div>
                <div class="text-step--1">{page.location}</div>
              </li>
            </ul>
          </div>
          <Image src={bgImage} alt="" width={500} height={500} class="img" format="webp" />
        </div>
        <div class="event-box-lower">
          {
            page.associatedMinistry ? (
              <div class="flow">
                <div class="small-title">Associated Ministry</div>
                <MiniPreviewCard
                  theme="dark"
                  href={`/connect/ministries/${page.associatedMinistry.slug}`}
                  image={page.associatedMinistry.image}
                >
                  <div class="text-step-1 font-header">
                    {page.associatedMinistry.name}
                  </div>
                </MiniPreviewCard>
              </div>
            ) : (
              <a href="/calendar" class="cluster">
                <i class="fa-duotone fa-calendar-days" />
                See more events on our calendar.
              </a>
            )
          }
        </div>
      </div>
    </div>
  </div>
  <!-- <div slot="highlight" class="more flow">
    <h2 class="text-step-3">More Events</h2>
    <ul class="responsive-grid">
        {randomEvents.map(item => {
          const image = item.image || item.associatedMinistry.image || defaultImage;
            return (<li>
                <Card 
                    title={item.name} 
                    image={image}
                    href={`/connect/events/${DateTime.fromISO(item.date).setZone('America/Los_Angeles').toFormat('L-d-yyyy')}-${item.slug}`}
                >
                    <div slot="label" class="event-date">
                        <DateLabel date={item.date} />
                    </div>
                    <div slot="header" class="small-title event-category">
                        {`${item.eventType.name} event`}
                    </div>
                    <p slot="body" class="text-step--1">
                        {item.preview}
                    </p>
                    <div slot="footer" class="location-footer text-step--1 cluster font-header">
                        <span class="location-icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512" height="16" width="16" fill="var(--color-primary-800)"><defs><style>.fa-secondary{opacity:.4}</style></defs><path class="fa-primary" d="M192 144a48 48 0 1 0 0 96 48 48 0 1 0 0-96z"/><path class="fa-secondary" d="M215.7 499.2C267 435 384 279.4 384 192C384 86 298 0 192 0S0 86 0 192c0 87.4 117 243 168.3 307.2c12.3 15.3 35.1 15.3 47.4 0zM192 112a80 80 0 1 1 0 160 80 80 0 1 1 0-160z"/></svg></span>
                        <span>{item.location}</span>
                    </div>
                </Card>
            </li>)}
        )}
    </ul>
    <div class="center-items">
      <Button href="/connect/events">See All Events</Button>
    </div>
  </div> -->
</ThirdLayout>

<style>
  .cta {
    margin-block: var(--section-spacer-half);
  }

  .more {
    --flow-space: 2.5rem;
  }

  .responsive-grid {
    --gap: 2rem;
    --item-min-width: 20rem;
    --item-max-width: 23rem;
  }

  .location-footer.cluster {
    gap: 4px;
  }

  .location-footer .location-icon {
    display: flex;
  }

  .sidebar-content {
    padding-top: 1rem;
  }

  .eyebrow.cluster {
    margin-bottom: 1rem;
  }

  .eyebrow > :last-child {
    font-variant-numeric: lining-nums;
    color: var(--color-primary-800);
  }

  .small-title.heading-category {
    font-size: 14px;
    display: inline-flex;
    align-items: center;
    gap: 6px;
    text-decoration: none;
    color: var(--color-primary-800);
    width: fit-content;
    line-height: 1;
    padding: 6px 9px;
    background-color: var(--color-primary-100);
    border-radius: var(--rounded-corners-small);
    transition: all 0.2s ease;
  }

  .small-title.heading-category:hover {
    background-color: var(--color-primary-200);
  }

  .small-title.event-category {
    display: inline-block;
    color: var(--color-primary-900);
    line-height: 1;
    padding: 4px 6px;
    margin-bottom: 10px;
    background-color: var(--color-primary-100);
    border-radius: var(--rounded-corners-small);
  }

  .event-box-wrapper {
    --shadow: 0px 4px 40px hsl(217deg 87% 40% / 15%);
    box-shadow: var(--shadow);
    border-radius: var(--rounded-corners);
  }

  .event-box {
    position: relative;
    display: flex;
    flex-direction: column;
    padding: 2rem;
    border-top-left-radius: var(--rounded-corners);
    border-top-right-radius: var(--rounded-corners);
    background: var(--color-primary-100);
    overflow: hidden;
  }

  .event-box-lower {
    background: var(--color-primary-800);
    color: var(--color-white);
    padding: 2rem;
    border-bottom-left-radius: var(--rounded-corners);
    border-bottom-right-radius: var(--rounded-corners);
  }

  .event-box-lower .flow > :first-child {
    margin-bottom: 1rem;
  }

  .event-box-lower .font-header {
    line-height: 1.2;
  }

  .event-box > div {
    position: relative;
    z-index: 2;
  }

  .img {
    position: absolute;
    z-index: 1;
    inset: 0;
    border-radius: var(--rounded-corners);
    filter: saturate(0);
    opacity: 0.75;
    mix-blend-mode: overlay;
  }

  .event-details {
    margin-top: 1.5rem;
  }

  .event-details .small-title {
    color: var(--color-primary-800);
    margin-bottom: 3px;
  }

  .event-details .small-title.cluster {
    --cluster-space: 9px;
  }

  .event-details svg {
    fill: var(--color-primary-800);
  }

  .center-items {
    margin-top: var(--space-2xl);
  }
</style>
