---
import ThirdLayout from "../../../layouts/ThirdLayout.astro";
import CategoryList from "../../../components/Events/CategoryList.astro";
import EventsList from "../../../components/Events/EventsList.astro";
import Button from "../../../components/Button.astro";
import SidebarLinkItem from "../../../components/SidebarLinkItem.astro";

import { eventCategories, eventsByCategory } from "../../../lib/events";

export async function getStaticPaths() {
  const pages = eventsByCategory;

  return pages.map((page) => {
    return {
      params: { category: page.slug },
      props: { page },
    };
  });
}

const { category } = Astro.params;
const { page } = Astro.props;

const breadcrumbs = [
  {
    name: "Connect",
    href: "/connect",
  },
  {
    name: "Events",
    href: "/connect/events",
  },
  {
    name: `${page.name} Events`,
    current: true,
  },
];
const allCategories = eventCategories;
---

<ThirdLayout
  meta={{
    title: `${page.name} Events`,
    description: `${page.name} events at San Marino Community Church.`,
    ogTitle: `${page.name} Events`,
    ogDescription: `${page.name} events at San Marino Community Church.`,
    ogImage: undefined,
  }}
  header={`${page.name} Events`}
  breadcrumbs={breadcrumbs}
>
  <div slot="eyebrow" class="eyebrow cluster">
    <a class="small-title heading-category" href={`/connect/events`}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        height="12"
        width="12"
        fill="var(--color-primary-800)"
        viewBox="0 0 448 512"
        ><path
          d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"
        ></path></svg
      >
      <span>All Events</span>
    </a>
  </div>
  <section slot="main-panel">
    {
      page.events.length !== 0 ? (
        <EventsList events={page.events} />
      ) : (
        <div style="font-style: italic;">
          No upcoming {page.name} events at this time.
        </div>
      )
    }
  </section>
  <aside
    slot="sidebar"
    class="parent flow"
    style="--flow-space: var(--space-xl);"
  >
    <div class="flow">
      <h3 class="text-step-2">Event Categories</h3>
      <CategoryList categories={allCategories} />
    </div>
    <div class="sidebar-links">
      <SidebarLinkItem
        name="View Calendar"
        icon="calendar-days"
        description="View our calendar for more events and services."
        href="/calendar"
      />
      <Button href="/connect/events/archive">
        <span>Events Archive</span>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          height="1em"
          width="1em"
          viewBox="0 0 512 512"
          ><defs
            ><style>
              .fa-secondary {
                opacity: 0.4;
              }
            </style></defs
          ><path
            class="fa-primary"
            d="M0 64C0 46.3 14.3 32 32 32H480c17.7 0 32 14.3 32 32V96c0 17.7-14.3 32-32 32H32C14.3 128 0 113.7 0 96V64z"
          ></path><path
            class="fa-secondary"
            d="M480 128H32V416c0 35.3 28.7 64 64 64H416c35.3 0 64-28.7 64-64V128zM192 192H320c17.7 0 32 14.3 32 32s-14.3 32-32 32H192c-17.7 0-32-14.3-32-32s14.3-32 32-32z"
          ></path></svg
        >
      </Button>
    </div>
  </aside>
</ThirdLayout>

<style>
  .eyebrow.cluster {
    margin-bottom: 0.75rem;
  }

  .small-title.heading-category {
    font-size: 14px;
    display: inline-flex;
    align-items: center;
    gap: 6px;
    text-decoration: none;
    color: var(--color-primary-800);
    width: fit-content;
    line-height: 1;
    padding: 6px 9px;
    background-color: var(--color-primary-100);
    border-radius: var(--rounded-corners-small);
    transition: all 0.2s ease;
  }

  .small-title.heading-category:hover {
    background-color: var(--color-primary-200);
  }

  .sidebar-links {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    align-items: flex-start;
  }

  .sidebar-links svg {
    fill: var(--color-primary-50);
  }
</style>
