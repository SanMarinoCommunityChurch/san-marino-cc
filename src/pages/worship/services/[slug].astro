---
import Layout from "../../../layouts/Layout.astro";
import Button from "../../../components/Button.astro";
import InnerHero from "../../../components/InnerHero.astro";
import Breadcrumb from "../../../components/Breadcrumb.astro";
import ServiceInfo from "../../../components/ServiceInfo.astro";
import getYouTubeID from "get-youtube-id";
import Youtube from "svelte-youtube-embed";

import { PortableText } from "astro-portabletext";
import {
  formatDate,
  timeFormatter,
  capitalizeFirstLetter,
  joinNames
} from "../../../utils/format";
import { getSanityData, urlFor } from "../../../lib/sanity";

import pastorHeadshot from "../../../assets/images/jessica-vaughan-lower-headshot.jpg";

export async function getStaticPaths() {
  const pages = await getSanityData(`*[_type == 'service'] | order(date desc) {
  ...,
  serviceType[] {
    ...,
    preacher->{
      name,
      "image": image.asset->
    }
  }
}`);

  return pages.map((page) => {
    return {
      params: { slug: page.date },
      props: { page },
    };
  });
}

const { slug } = Astro.params;
const { page } = Astro.props;
---

<Layout>
  <main slot="main">
    <article class="content-wrapper">
      <section class="hero">
        <Breadcrumb
          section="Worship"
          sectionURL="/worship"
          page="Worship Services"
          pageURL="/worship/services"
          url={formatDate(slug)}
        />
        <div class="hero-text flow">
          <h1 class="text-step-5">{
            page.name ?
            page.name :
            "Sunday Worship"
            }</h1>
          <div class="cluster">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 448 512"
              width="22"
              height="22"
              fill="var(--color-primary-800)"
              ><defs
                ><style>
                  .fa-secondary {
                    opacity: 0.4;
                  }
                </style></defs
              ><path
                class="fa-primary"
                d="M96 32c0-17.7 14.3-32 32-32s32 14.3 32 32V64H288V32c0-17.7 14.3-32 32-32s32 14.3 32 32V64h48c26.5 0 48 21.5 48 48v80H0V112C0 85.5 21.5 64 48 64H96V32z"
              ></path><path
                class="fa-secondary"
                d="M448 192H0V464c0 26.5 21.5 48 48 48H400c26.5 0 48-21.5 48-48V192zM80 256H368c8.8 0 16 7.2 16 16v64c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V272c0-8.8 7.2-16 16-16z"
              ></path></svg
            >
            <time class="text-step-1">{formatDate(page.date)}</time>
          </div>
          <div class="cluster page-links">
            {
              page.serviceType.map(service =>
                <a href={`#${service.name}`} class="category small-title">{service.name}</a>
              )
            }
          </div>
        </div>
      </section>
      {
        page.serviceType.map((service) => (
          <section id={service.name} class="section flex">
            {service.video && (
              <div class="video-wrapper">
                <div>
                  <Youtube client:idle id={getYouTubeID(service.video.url)} />
                </div>
              </div>
            )}
            <div class="content flow">
              <div>
                <div class="cluster time">
                  <svg 
                    xmlns="http://www.w3.org/2000/svg" 
                    viewBox="0 0 512 512"
                    width="16"
                    height="16"
                    fill="var(--color-primary-700)"
                  ><defs><style>.fa-secondary{opacity:.4}</style></defs><path class="fa-primary" d="M256 96c-13.3 0-24 10.7-24 24V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24z"/><path class="fa-secondary" d="M256 0a256 256 0 1 1 0 512A256 256 0 1 1 256 0zM232 120V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24s-24 10.7-24 24z"/></svg>
                <time class="small-title">
                  {timeFormatter(service.serviceTime)}
                </time>
                </div>
                <h2 class="text-step-3">
                  {capitalizeFirstLetter(service.name) + " Service"}
                </h2>
              </div>
              <div class="sermon flex">
                <div class="frame square">
                  <img src={urlFor(service.preacher.image).url()} alt="" />
                </div>
                <div>
                  <div class="small-title">Sermon by</div>
                  <a href="#" class="text-step--1">{joinNames(service.preacher)}</a>
                </div>
              </div>
              <PortableText value={service.serviceDescription} />
              <Button href={service.programLink} width="fit">
                Download Program
              </Button>
            </div>
          </section>
        ))
      }
    </article>
  </main>
</Layout>

<style>
  main {
    background-color: var(--color-neutral-100);
  }

  article {
    padding-bottom: var(--section-spacer);
  }

  .content-wrapper {
    background-color: var(--color-white);
    padding-inline: var(--space-m-2xl);
  }

  .section.flex {
    flex-direction: column;
    gap: var(--space-l);
    margin-top: 3rem;
    padding-top: 3rem;
    border-top: 1px solid var(--color-primary-200);
  }

  .video-wrapper {
    width: min(100%, 50rem);
    border: 1px solid var(--color-primary-200);
    border-radius: var(--rounded-corners);
    overflow: hidden;
    aspect-ratio: 16/9;
  }

  .hero {
    padding-top: 2rem;
  }

  .hero-text {
    margin-block-start: 5rem;
    margin-block-end: 3rem;
  }

  .hero-text time {
    font-style: italic;
  }

  .hero-text svg {
    position: relative;
    top: -3px;
  }

  .content.flow {
    --flow-space: var(--space-m);
  }

  .sermon.flex {
    gap: 1rem;
    align-items: center;
  }

  .time {
    margin-bottom: 6px;
  }

  .time.cluster {
    --cluster-space: 0.75rem;
  }

  .time .small-title {
    font-size: var(--step-0);
    color: var(--color-primary-700)
  }

  .time svg {
    position: relative;
    top: 1px;
  }

  .with-sidebar {

  }

  .frame.square {
    border-radius: 9999px;
    width: 4rem;
    height: 4rem;
  }

  .small-title.category {
    font-size: 13px;
    display: inline-block;
    text-decoration: none;
    color: var(--color-primary-800);
    line-height: 1;
    padding: 4px 6px;
    margin-bottom: 8px;
    background-color: var(--color-primary-100);
    border-radius: var(--rounded-corners-small);
    transition: all 0.2s ease;
  }

  .small-title.category:hover {
    color: var(--color-white);
    background-color: var(--color-primary-800);
  }

  .page-links {
    padding-top: 1rem;
  }
</style>
