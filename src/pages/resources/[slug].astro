---
// @ts-nocheck
import ResourceLayout from "../../layouts/ResourceLayout.astro";
import { allPosts } from "../../lib/posts";
import { PortableText } from "astro-portabletext";
import PostCategory from "../../components/PostCategory.astro";
import InlineImage from "../../components/InlineImage.astro";
import InlineYoutubeEmbed from "../../components/InlineYoutubeEmbed.astro";
import InlineEvent from "../../components/InlineEvent.astro";
import PreviewFeature from "../../components/PreviewFeature.astro";
import { urlFor } from "../../lib/sanity";
import { randomizeAndSlice, filterAgainst } from "../../utils/data";
import "../../styles/rich-text.css";

export async function getStaticPaths() {
  const pages = allPosts;

  return pages.map((page) => {
    return {
      params: { slug: page.slug },
      props: { page },
    };
  });
}

const { slug } = Astro.params;
const { page } = Astro.props;

const breadcrumbs = [
  {
    name: "Resources",
    href: "/resources",
  },
  {
    name: page.category.name,
    href: `/resources/${page.category.slug}`,
  },
  {
    name: page.title,
    current: true,
  },
];

const otherPosts = allPosts;
// const filteredPosts = filterAgainst(otherPosts, "categoryName", page);
const filteredPosts = otherPosts.filter(
  (post) =>
    post.category.name === page.category.name && post.title !== page.title
);
const randomPosts = randomizeAndSlice(filteredPosts, 3);
// empty array is not falsey
// console.log(page.richContent);
---

<ResourceLayout
  seo={page.seo}
  name={page.title}
  preview={page.preview}
  breadcrumbs={breadcrumbs}
  author={page.author}
  publishDate={page.publishDate}
  featuredImage={page.image}
  moreContent={randomPosts.length != 0 ? randomPosts : undefined}
>
  <PostCategory
    slot="eyebrow"
    href={`/resources/${page.category.slug}`}
    name={page.category.name}
    position="relative"
    size="small"
    theme={"default"}
  />
  <div slot="sidebar" class="flow"></div>
  <div slot="main-panel" class="rich-text">
    <PortableText
      value={page.richContent}
      components={{
        type: {
          image: InlineImage,
          previewFeature: PreviewFeature,
          youtube: InlineYoutubeEmbed,
          event: InlineEvent,
        },
      }}
    />
  </div>
</ResourceLayout>

<style></style>
