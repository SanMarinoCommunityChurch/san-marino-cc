---
import UtilityLayout from "../../layouts/UtilityLayout.astro";
import Button from "../../components/Button.astro";
---

<UtilityLayout currentPage={"88b9cf6b-df9d-4ba2-bed0-e4cddf91201b"}>
  <div id="calendar">
    <div id="loading" style="text-align: center;">...Loading calendar</div>
  </div>
  <div class="center-items cluster">
    <Button href="/connect/events">See All Events</Button>
    <Button href="/worship/services">See All Services</Button>
  </div>
</UtilityLayout>

<style is:global>
  .fc-event {
    cursor: pointer !important;
  }

  .fc-h-event {
    background-color: var(--color-primary-800);
    border: var(--color-primary-800) 1px solid;
  }

  .fc-daygrid-event-dot {
    border-color: var(--color-primary-400);
  }

  .tippy-box {
    background-color: var(--color-primary-900);
  }

  .tippy-arrow {
    color: var(--color-primary-900);
  }

  .tooltip-title {
    font-family: var(--font-secondary);
    font-weight: var(--font-weight-header);
    font-size: var(--step-0);
    line-height: 1.15;
  }

  .tippy-content > * + * {
    margin-top: 9px;
  }
</style>

<script>
  import { Calendar } from "@fullcalendar/core";
  import dayGridPlugin from "@fullcalendar/daygrid";
  import listPlugin from "@fullcalendar/list";
  import googleCalendarPlugin from "@fullcalendar/google-calendar";
  import { capitalizeFirstLetter } from "../../utils/format";
  import tippy from "tippy.js";
  import "tippy.js/dist/tippy.css";

  const calenderEl = document.querySelector("#calendar") as HTMLElement;
  const mediaQuery = window.matchMedia("(max-width: 768px)");

  // async function getEventData() {
  //   const res = await fetch("http://localhost:3000/calendar.json");
  //   return res.json();
  // }

  // async function getServiceData() {
  //   const res = await fetch("http://localhost:3000/worship.json");
  //   return res.json();
  // }
  async function getEventData() {
    const res = await fetch(
      "https://sanmarinocommunitychurch.com/calendar.json"
    );
    return res.json();
  }

  async function getServiceData() {
    const res = await fetch(
      "https://sanmarinocommunitychurch.com/worship.json"
    );
    return res.json();
  }

  const eventData = await getEventData();
  const serviceData = await getServiceData();
  const { events } = eventData;
  const { services } = serviceData;

  const eventObjs = events.map((event) => {
    return {
      id: event._id,
      title: event.name,
      start: event.date,
      end: event.endDate,
      extendedProps: {
        type: "event",
        description: event.preview,
        location: event.location,
        eventType: event.eventType.name,
        image:
          event.image &&
          event.image.asset.url +
            "?w=200&h=120&fit=crop&crop=center&auto=format",
        slug: event.slug,
      },
    };
  });

  const serviceObjs = services.flatMap((service) => {
    return service.serviceType.map((type) => {
      const serviceDate = `${service.date}T${type.serviceTime}:00`;
      const now = new Date();
      const serviceDateTime = new Date(serviceDate);
      return {
        title: capitalizeFirstLetter(type.name) + " Worship",
        start: serviceDate,
        extendedProps: {
          type: "service",
          description: service.name || "Sunday Service",
          slug: serviceDateTime > now ? `live` : `services/${service.slug}`,
        },
      };
    });
  });

  const combinedEvents = [].concat(eventObjs, serviceObjs);

  const calendar = new Calendar(calenderEl, {
    plugins: [dayGridPlugin, listPlugin, googleCalendarPlugin],
    googleCalendarApiKey: "AIzaSyALfrmXSrV_Qxgtod5Jvu9FBQrnzRmYsRQ",
    initialView: mediaQuery.matches ? "listWeek" : "dayGridMonth",
    headerToolbar: {
      start: "title",
      center: "dayGridMonth,listWeek",
      end: "today prev,next",
    },
    buttonText: {
      today: "Today",
      dayGridMonth: "View Month",
      listWeek: "View List",
    },
    eventSources: [
      {
        googleCalendarId:
          "c_634dd972237f4bda93a24955f2b6032fb19b779f1a17aa6170da70e79197663d@group.calendar.google.com",
      },
      {
        events: combinedEvents,
      },
    ],
    // events: combinedEvents,
    eventClick: function (info) {
      info.jsEvent.preventDefault();
      const instance = tippy(info.el, {
        trigger: "click",
        interactive: true,
        allowHTML: true,
      });
      console.log(info.event);
      if (info.event.extendedProps.type == "event") {
        if (info.event.extendedProps.image) {
          instance.setContent(
            `<img src="${info.event.extendedProps.image}" width="200" height="120" loading="lazy" /><div class="tooltip-title">${info.event.title}</div><div>${info.event.extendedProps.description}</div><div><a href="/connect/events/${info.event.extendedProps.slug}">See more</a></div>`
          );
        } else {
          instance.setContent(
            `<div class="tooltip-title">${info.event.title}</div><div>${info.event.extendedProps.description}</div><div><a href="/connect/events/${info.event.extendedProps.slug}">See more</a></div>`
          );
        }
      } else if (info.event.extendedProps.type == "service") {
        instance.setContent(
          `<div class="tooltip-title">${info.event.title}</div><p>${info.event.extendedProps.description}</p><a href="/worship/${info.event.extendedProps.slug}">Watch video</a>`
        );
      } else if (info.event.extendedProps.description) {
        instance.setContent(
          `<div class="tooltip-title">${info.event.title}<div></div>${
            info.event.extendedProps.description
          }</div>${
            info.event.url &&
            `<div><a href=${info.event.url} target="_blank">Google Calendar link</a></div>`
          }`
        );
      } else {
        instance.setContent(
          `<div class="tooltip-title">${info.event.title}</div>${
            info.event.url &&
            `<div><a href=${info.event.url} target="_blank">Google Calendar link</a></div>`
          }`
        );
      }

      instance.show();
    },
  });
  calendar.render();
  mediaQuery.addEventListener("change", () => {
    console.log("media breakpoint");
    calendar.render();
  });
</script>
